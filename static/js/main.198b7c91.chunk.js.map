{"version":3,"sources":["utils/ constants.js","utils/importFile.js","utils/util.js","components/StatusForm.jsx","components/ResultCard.jsx","App.js","index.js"],"names":["depressed_msg","nondepressed_msg","depressed_LL_msg","nondepressed_LL_msg","a","Papa","fetchCsv","response","parse","data","fetch","reader","body","getReader","read","result","decoder","TextDecoder","decode","value","csv","logProbsOf","word_freq_table","total_ct_term","log_probs","word","Math","log","logLikelihoodOf","input_data","log_probs_table","prior","logLikelihood","i","length","StatusForm","props","onSubmit","e","preventDefault","handleStatus","state","status","onChange","setState","target","className","style","width","padding","this","type","name","placeholder","React","Component","ResultCard","renderResult","depressed_bool","Segment","depressed_LL","nondepressed_LL","SegmentGroup","marginRight","App","status_array","words","split","toLowerCase","replace","parseStatus","calculateEstimate","depressed_log_probs","nondepressed_log_probs","max","getData","then","shift","depressed_ct_total","nondepressed_ct_total","depressed_freq_table","nondepressed_freq_table","row","j","depressed","total_ct","freq_table","nondepressed","populateCounts","Grid","Row","columns","marginBottom","marginTop","Column","ReactDOM","render","document","getElementById"],"mappings":"+OAMaA,EAAgB,sHAChBC,EAAmB,uEACnBC,EAAmB,yGACnBC,EAAsB,iG,4CCNpB,4BAAAC,EAAA,kEACMC,IADN,SACuBC,IADvB,0BACLC,EADK,KACWC,MADX,gBACmCC,KADnC,kBAEJF,GAFI,4C,+BAKAD,I,2EAAf,oCAAAF,EAAA,sEAC2BM,MAAM,QAAD,ODTR,mBCQxB,cACUH,EADV,OAEUI,EAASJ,EAASK,KAAKC,YAFjC,SAGyBF,EAAOG,OAHhC,cAGUC,EAHV,OAIUC,EAAU,IAAIC,YAAY,SAJpC,UAKsBD,EAAQE,OAAOH,EAAOI,OAL5C,eAKUC,EALV,yBAMWA,GANX,6C,sBCPO,IA4CMC,EAAa,SAACC,EAAiBC,GAC1C,IAAIC,EAAY,GAChB,IAAK,IAAMC,KAAQH,EACjBE,EAAUC,GAAQC,KAAKC,IAAIL,EAAgBG,GAAQF,GAErD,OAAOC,GAGII,EAAkB,SAACC,EAAYC,EAAiBC,GAE3D,IADA,IAAIC,EAAgB,EACXC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,IAAK,CAC1C,IAAMR,EAAOI,EAAWI,GACpBR,KAAQK,IACVE,GAAiBF,EAAgBL,IAGrC,OAAOO,EAAgBN,KAAKC,IAAII,ICxBnBI,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,SAAW,SAACC,GACVA,EAAEC,iBACF,EAAKH,MAAMI,aAAa,EAAKC,MAAMC,SAPlB,EAUpBC,SAAW,SAACL,GACX,EAAKM,SAAS,CAAEF,OAAQJ,EAAEO,OAAO1B,SAT/B,EAAKsB,MAAQ,CAAEC,OAAQ,IAFN,E,qDAejB,OACE,yBAAKI,UAAU,oBAAoBC,MAAO,CAAEC,MAAO,OAAQC,QAAS,SAClE,0BAAMH,UAAU,mBAAmBT,SAAUa,KAAKb,UAChD,yBAAKS,UAAU,SACb,sDACA,2BACEK,KAAK,OACLC,KAAK,OACLC,YAAY,yCACZV,SAAUO,KAAKP,YAGnB,4BAAQG,UAAU,0BAA0BK,KAAK,UAAjD,gB,GA5BeG,IAAMC,W,iBCqDhBC,E,4MA9CbC,aAAe,WACb,OAAkC,OAA9B,EAAKrB,MAAMsB,eAEX,kBAACC,EAAA,EAAD,oDAKK,EAAKvB,MAAMsB,eAEhB,oCACE,kBAACC,EAAA,EAAD,CAASb,UAAU,OACnB,2BAAI9C,IAEJ,kBAAC2D,EAAA,EAAD,KACCzD,EADD,IACmB,2BAAI,EAAKkC,MAAMwB,cAClC,6BACCzD,EAHD,IAGsB,2BAAI,EAAKiC,MAAMyB,mBAMvC,oCACE,kBAACF,EAAA,EAAD,CAASb,UAAU,SACjB,2BAAI7C,IAEN,kBAAC0D,EAAA,EAAD,KACCzD,EADD,IACmB,2BAAI,EAAKkC,MAAMwB,cAClC,6BACCzD,EAHD,IAGsB,2BAAI,EAAKiC,MAAMyB,oB,uDAQ3C,OACE,kBAACC,EAAA,EAAD,CAAchB,UAAU,eAAeC,MAAO,CAACgB,YAAa,SACzDb,KAAKO,oB,GA1CWH,IAAMC,WC0FhBS,E,kDA5Eb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAuBRI,aAAe,SAACE,GACd,IAAMuB,EHTiB,SAACvB,GAE1B,IADA,IAAIwB,EAAQxB,EAAOyB,MAAM,KAChBlC,EAAI,EAAGA,EAAIiC,EAAMhC,OAAQD,IAChCiC,EAAMjC,GAAKiC,EAAMjC,GAAGmC,cAAcC,QAAQ,SAAU,IAEtD,OAAOH,EGIgBI,CAAY5B,GAC3BgB,EAAiB,EAAKa,kBAAkBN,GAC9C,EAAKrB,SAAS,CAAEc,oBA3BC,EA8BnBa,kBAAoB,SAACN,GAEnB,IAAML,GAEH,EAFkBhC,EACnBqC,EAAc,EAAKxB,MAAM+B,oBLpDA,IKsDrBX,GAEH,EAFqBjC,EACtBqC,EAAc,EAAKxB,MAAMgC,uBLtDG,IKuDvB,EAGP,OAFA,EAAK7B,SAAS,CAAEgB,eAAcC,oBACZnC,KAAKgD,IAAId,EAAcC,KACvBD,GAtClB,EAAKnB,MAAQ,CACX+B,oBAAqB,KAAMZ,aAAc,KACzCa,uBAAwB,KAAMZ,gBAAiB,KAC/CnB,OAAQ,GAAIgB,eAAgB,MALb,E,gEASC,IAAD,QJ3BN,WAAf,gCI4BIiB,GAAUC,MAAK,SAAC7D,GACdA,EAAO8D,QACP,IAAMpE,EHhCkB,SAACA,GAM7B,IALA,IAAIqE,EAAqB,EACrBC,EAAwB,EACxBC,EAAuB,GACvBC,EAA0B,GAErBhD,EAAI,EAAGA,EAAIxB,EAAKyB,OAAQD,IAG/B,IAFA,IAAMiD,EAAMzE,EAAKwB,GACXiC,EAAQgB,EAAI,GAAGf,MAAM,KAClBgB,EAAI,EAAGA,EAAIjB,EAAMhC,OAAQiD,IAAK,CACrC,IAAM1D,EAAOyC,EAAMiB,GAAGf,cAAcC,QAAQ,SAAU,IACvC,QAAXa,EAAI,IACAzD,KAAQuD,EAIZA,EAAqBvD,IAAS,EAH9BuD,EAAqBvD,GAAQ,EAK/BqD,GAAsB,GACF,OAAXI,EAAI,KACPzD,KAAQwD,EAIZA,EAAwBxD,IAAS,EAHjCwD,EAAwBxD,GAAQ,EAKlCsD,GAAyB,GAI/B,MAAO,CACLK,UAAW,CAACC,SAAUP,EAAoBQ,WAAYN,GACtDO,aAAc,CAACF,SAAUN,EAAuBO,WAAYL,IGA7CO,CAAezE,GAE1BqE,EAEE3E,EAFF2E,UACAG,EACE9E,EADF8E,aAGIf,EAAsBnD,EAAW+D,EAAUE,WAAYF,EAAUC,UACjEZ,EAAyBpD,EAAWkE,EAAaD,WAAYC,EAAaF,UAChF,EAAKzC,SAAS,CAAE4B,sBAAqBC,gC,+BA2BvC,OACE,6BACE,kBAACgB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAS,GACjB,wBACE7C,UAAU,+BACVC,MAAO,CAAC6C,aAAc,QAASC,UAAW,SLrE9B,oHK0EhB,kBAACJ,EAAA,EAAKC,IAAN,CAAUC,QAAS,GACjB,kBAACF,EAAA,EAAKK,OAAN,KACE,kBAAC,EAAD,CAAYtD,aAAcU,KAAKV,gBAEjC,kBAACiD,EAAA,EAAKK,OAAN,CAAa9C,MAAM,KACnB,kBAAC,EAAD,CACIU,eAAgBR,KAAKT,MAAMiB,eAC3BE,aAAcV,KAAKT,MAAMmB,aACzBC,gBAAiBX,KAAKT,MAAMoB,0B,GAnE1BP,IAAMC,WChBxBwC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.198b7c91.chunk.js","sourcesContent":["export const filename = \"mh_dataset.csv\";\n\nexport const depressed_prior = 0.5;\nexport const nondepressed_prior = 0.5;\n\nexport const header_msg = \"Input a friend's social media post that you're concerned about to see if they might be feeling depressed or not\";\nexport const depressed_msg = \"It seems like they are not feeling well lately. It would be a good idea to reach out to them and give them support.\";\nexport const nondepressed_msg = \"It seems like they are doing okay, but make sure to cherish them. :)\";\nexport const depressed_LL_msg = \"This was evidenced under the hood by the log likelihood of the text showing emotional distress being: \";\nexport const nondepressed_LL_msg = \"This was evidenced under the hood by the log likelihood of the text showing positivity being: \";","import Papa from 'papaparse';\nimport { filename } from './ constants';\n\nexport default async function GetData() {\n    const response = Papa.parse(await fetchCsv()).data;\n    return response;\n}\n\nasync function fetchCsv() {\n    const response = await fetch(`data/${filename}`);\n    const reader = response.body.getReader();\n    const result = await reader.read();\n    const decoder = new TextDecoder('utf-8');\n    const csv = await decoder.decode(result.value);\n    return csv;\n}","\nexport const populateCounts = (data) => {\n  let depressed_ct_total = 0.0;\n  let nondepressed_ct_total = 0.0;\n  let depressed_freq_table = {};\n  let nondepressed_freq_table = {};\n\n  for (let i = 0; i < data.length; i++) {\n    const row = data[i];\n    const words = row[0].split(\" \");\n    for (let j = 0; j < words.length; j++) {\n      const word = words[j].toLowerCase().replace(/[^a-z]/, '');\n      if (row[1] === 'Yes') {\n        if (!(word in depressed_freq_table)) {\n          depressed_freq_table[word] = 1.0\n        }\n        else {\n          depressed_freq_table[word] += 1.0\n        }\n        depressed_ct_total += 1.0;\n      } else if (row[1] === 'No') {\n        if (!(word in nondepressed_freq_table)) {\n          nondepressed_freq_table[word] = 1.0\n        }\n        else {\n          nondepressed_freq_table[word] += 1.0\n        }\n        nondepressed_ct_total += 1.0;\n      }\n    }\n  }\n  return {\n    depressed: {total_ct: depressed_ct_total, freq_table: depressed_freq_table},\n    nondepressed: {total_ct: nondepressed_ct_total, freq_table: nondepressed_freq_table}\n  };\n};\n\nexport const parseStatus = (status) => {\n  let words = status.split(\" \");\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i].toLowerCase().replace(/[^a-z]/, '');\n  } \n  return words;\n};\n\nexport const logProbsOf = (word_freq_table, total_ct_term) => {\n  let log_probs = {}\n  for (const word in word_freq_table) {\n    log_probs[word] = Math.log(word_freq_table[word] / total_ct_term);\n  }\n  return log_probs;\n}\n\nexport const logLikelihoodOf = (input_data, log_probs_table, prior) => {\n  let logLikelihood = 0.0;\n  for (let i = 0; i < input_data.length; i++) {\n    const word = input_data[i];\n    if (word in log_probs_table) {\n      logLikelihood += log_probs_table[word];\n    }\n  } \n  return logLikelihood - Math.log(prior);\n\n}\n\n","import React from 'react';\n\nclass StatusForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { status: '' };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleStatus(this.state.status);\n }\n\n onChange = (e) => {\n  this.setState({ status: e.target.value });\n}\n\n  render() {\n    return (\n      <div className='ui card container' style={{ width: '40vw', padding: '20px'}}>\n        <form className=\"ui form clearing\" onSubmit={this.onSubmit}>\n          <div className=\"field\">\n            <label>Social Media Status</label>\n            <input\n              type=\"text\"\n              name=\"post\"\n              placeholder=\"Enter your friend's social media post.\"\n              onChange={this.onChange}\n            />\n          </div>\n          <button className=\"ui button right floated\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default StatusForm;","import React from 'react';\nimport { Segment, SegmentGroup } from 'semantic-ui-react';\n\nimport { depressed_msg, depressed_LL_msg,\nnondepressed_msg, nondepressed_LL_msg,\n} from '../utils/ constants';\n\nclass ResultCard extends React.Component {\n\n  renderResult = () => {\n    if (this.props.depressed_bool === null) {\n      return (\n        <Segment>\n          Awaiting submission to get back results ...\n        </Segment>\n      );\n    }\n    else if (this.props.depressed_bool) {\n      return (\n        <>\n          <Segment className='red'>\n          <b>{depressed_msg}</b>\n          </Segment>\n          <Segment>\n          {depressed_LL_msg} <b>{this.props.depressed_LL}</b>\n          <br/>\n          {nondepressed_LL_msg} <b>{this.props.nondepressed_LL}</b>\n          </Segment>\n       </>\n      );\n    } else {\n      return (\n        <>\n          <Segment className='green'>\n            <b>{nondepressed_msg}</b>\n          </Segment>\n          <Segment>\n          {depressed_LL_msg} <b>{this.props.depressed_LL}</b>\n          <br/>\n          {nondepressed_LL_msg} <b>{this.props.nondepressed_LL}</b>\n          </Segment>\n       </>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <SegmentGroup className='ui container' style={{marginRight: '50px'}}>\n        {this.renderResult()}\n      </SegmentGroup>\n    );\n  }\n}\n\nexport default ResultCard;","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\n\nimport getData from './utils/importFile';\nimport { \n  populateCounts,\n  parseStatus,\n  logProbsOf,\n  logLikelihoodOf,\n} from './utils/util';\nimport {\n  depressed_prior, nondepressed_prior,\n  header_msg,\n} from './utils/ constants';\n\nimport StatusForm from './components/StatusForm.jsx';\nimport ResultCard from './components/ResultCard.jsx';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      depressed_log_probs: null, depressed_LL: null,\n      nondepressed_log_probs: null, nondepressed_LL: null,\n      status: '', depressed_bool: null };\n\n  }\n\n  componentDidMount(){\n    getData().then((result) => {\n      result.shift();\n      const data = populateCounts(result);\n      const {\n        depressed,\n        nondepressed,\n      } = data;\n\n      const depressed_log_probs = logProbsOf(depressed.freq_table, depressed.total_ct);\n      const nondepressed_log_probs = logProbsOf(nondepressed.freq_table, nondepressed.total_ct);\n      this.setState({ depressed_log_probs, nondepressed_log_probs });\n    });\n  }\n  \n  handleStatus = (status) => {\n    const status_array = parseStatus(status);\n    const depressed_bool = this.calculateEstimate(status_array);\n    this.setState({ depressed_bool });\n  }\n\n  calculateEstimate = (status_array) => {\n\n    const depressed_LL = logLikelihoodOf(\n      status_array, this.state.depressed_log_probs, depressed_prior\n    )*-1;\n    const nondepressed_LL = logLikelihoodOf(\n      status_array, this.state.nondepressed_log_probs, nondepressed_prior\n    )*-1 + 7;\n    this.setState({ depressed_LL, nondepressed_LL });\n    const bestGuess = Math.max(depressed_LL, nondepressed_LL);\n    if (bestGuess === depressed_LL) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  render() {\n    return (\n      <div >\n        <Grid>\n          <Grid.Row columns={1}>\n            <h1\n              className='ui container header centered'\n              style={{marginBottom: '150px', marginTop: '50px'}}\n            >\n              {header_msg}\n            </h1>\n          </Grid.Row>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <StatusForm handleStatus={this.handleStatus}/>\n            </Grid.Column>\n            <Grid.Column width='7'>\n            <ResultCard\n                depressed_bool={this.state.depressed_bool}\n                depressed_LL={this.state.depressed_LL}\n                nondepressed_LL={this.state.nondepressed_LL}\n              />\n            </Grid.Column>\n        </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}